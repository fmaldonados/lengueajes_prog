/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto_lenguajes;

import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.BufferedWriter;
import java.io.File;
import javax.speech.*;
import javax.speech.recognition.*;
import java.io.FileReader;
import java.io.FileWriter;
import java.sql.*;
import java.util.ArrayList;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

public class principal extends javax.swing.JFrame {

    /**
     * Creates new form principal
     */
    public principal() {
        initComponents();
        String s = "";
        s = "org.jb2011.lnf.beautyeye.BeautyEyeLookAndFeelCross";
        try {
            javax.swing.UIManager.setLookAndFeel(s);
            SwingUtilities.updateComponentTreeUI(this);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        webcam = Webcam.getDefault();
        webcam.setViewSize(WebcamResolution.VGA.getSize());
        WebcamPanel panel = new WebcamPanel(webcam);
        panel.setFPSDisplayed(true);
        window = new JFrame("VIDEO CALL");
        window.setTitle("Videollamada");
        window.setSize(imagen_llamada.getSize());
        panel.setFillArea(true);
        window.add(panel);
        window.pack();
        window.setBounds(600, 150, 228, 188);
        window.setVisible(false);
        c = new cronometro(tiempo);
        this.jDialog1.setModal(false);
        this.jDialog1.pack();
        this.jDialog1.setLocationRelativeTo(this);
        this.jDialog1.setVisible(true);
        Image img = Toolkit.getDefaultToolkit().createImage(getClass().getResource("user.png")).getScaledInstance(227, 173, 0);
        Image img2 = Toolkit.getDefaultToolkit().createImage(getClass().getResource("user.png")).getScaledInstance(169, 145, 0);
        Image img3 = Toolkit.getDefaultToolkit().createImage(getClass().getResource("user.png")).getScaledInstance(228, 188, 0);
        lb_foto.setIcon(new ImageIcon(img2));
        imagen_modificar.setIcon(new ImageIcon(img2));
        imagen_principal.setIcon(new ImageIcon(img));
        imagen_llamada.setIcon(new ImageIcon(img3));
        try {
            recognizer = Central.createRecognizer(new EngineModeDesc(Locale.ROOT));
            recognizer.allocate();
            recognizer.pause();
        } catch (Exception e) {
            System.out.println("Exception en " + e.toString());
            e.printStackTrace();
            System.exit(0);
        }
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            con = DriverManager.getConnection(connection);

        } catch (Exception ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        refresh();
        refrescar_gramatica();
    }
    Webcam webcam;
    JFrame window;
    boolean encender = false;
    cronometro c;
    String connection = "jdbc:sqlserver://localhost:1433;databaseName=Lenguajes;user=innova;password=12345";
    Connection con;
    Escucha a = new Escucha();
    boolean mic_activado = false;
    Recognizer recognizer;
    boolean first = true;
    String path = "user.png";
    String modificar = "";
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        label_log = new javax.swing.JLabel();
        jt_username = new javax.swing.JTextField();
        jt_password = new javax.swing.JPasswordField();
        jButton6 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jd_llamada = new javax.swing.JDialog();
        imagen_llamada = new javax.swing.JLabel();
        nombre_llamada = new javax.swing.JLabel();
        tiempo = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        mic_sim = new javax.swing.JLabel();
        jd_agregar = new javax.swing.JDialog();
        jLabel11 = new javax.swing.JLabel();
        tf_nombre = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        tf_telefono = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        tf_correo = new javax.swing.JTextField();
        lb_foto = new javax.swing.JLabel();
        folder_agregar = new javax.swing.JLabel();
        guardar_agregar = new javax.swing.JLabel();
        errores = new javax.swing.JLabel();
        jd_modificar = new javax.swing.JDialog();
        nombre_modificar = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        telefono_modificar = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        correo_modificar = new javax.swing.JTextField();
        imagen_modificar = new javax.swing.JLabel();
        folder_modificar = new javax.swing.JLabel();
        guardar_modificar = new javax.swing.JLabel();
        errores2 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jd_mensaje = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        contenido_mensaje = new javax.swing.JTextArea();
        lb_send = new javax.swing.JLabel();
        contacto_mensaje = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        telefono_mensaje = new javax.swing.JLabel();
        id_mensaje = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_llamadas = new javax.swing.JTable();
        mic_llamada = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_contactos = new javax.swing.JTable();
        imagen_principal = new javax.swing.JLabel();
        mic_contacto = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla_mensajes = new javax.swing.JTable();
        mic_mensaje = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabla_bitacora = new javax.swing.JTable();

        jDialog1.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("User:");
        jDialog1.getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 73, -1, -1));

        jLabel3.setText("Password:");
        jDialog1.getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 122, -1, -1));

        label_log.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_lenguajes/microphone_med.png"))); // NOI18N
        label_log.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_logMouseClicked(evt);
            }
        });
        jDialog1.getContentPane().add(label_log, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 30, 40));
        jDialog1.getContentPane().add(jt_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 93, 177, -1));
        jDialog1.getContentPane().add(jt_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 147, 175, -1));

        jButton6.setText("Log In");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        jDialog1.getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 87, -1));
        jDialog1.getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 236, 315, 10));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_lenguajes/Blur-1-1024x667.png"))); // NOI18N
        jLabel8.setText("jLabel8");
        jDialog1.getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 350));

        imagen_llamada.setText("jLabel5");
        imagen_llamada.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        nombre_llamada.setText("Nombre de Contacto");

        tiempo.setText("Tiempo");

        jLabel22.setText("Colgar");
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
        });

        mic_sim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_lenguajes/microphone_med.png"))); // NOI18N
        mic_sim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mic_simMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jd_llamadaLayout = new javax.swing.GroupLayout(jd_llamada.getContentPane());
        jd_llamada.getContentPane().setLayout(jd_llamadaLayout);
        jd_llamadaLayout.setHorizontalGroup(
            jd_llamadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_llamadaLayout.createSequentialGroup()
                .addGroup(jd_llamadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_llamadaLayout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jd_llamadaLayout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(tiempo))
                    .addGroup(jd_llamadaLayout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(nombre_llamada)))
                .addContainerGap(181, Short.MAX_VALUE))
            .addGroup(jd_llamadaLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(imagen_llamada, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mic_sim)
                .addGap(37, 37, 37))
        );
        jd_llamadaLayout.setVerticalGroup(
            jd_llamadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_llamadaLayout.createSequentialGroup()
                .addGroup(jd_llamadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_llamadaLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(imagen_llamada, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jd_llamadaLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(mic_sim)))
                .addGap(27, 27, 27)
                .addComponent(nombre_llamada)
                .addGap(18, 18, 18)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tiempo)
                .addContainerGap(159, Short.MAX_VALUE))
        );

        jd_agregar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jd_agregarMouseMoved(evt);
            }
        });

        jLabel11.setText("Nombre");

        jLabel12.setText("Teléfono");

        jLabel13.setText("Correo");

        lb_foto.setBackground(new java.awt.Color(0, 0, 0));
        lb_foto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        folder_agregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_lenguajes/open-folder.png"))); // NOI18N
        folder_agregar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                folder_agregarMouseMoved(evt);
            }
        });
        folder_agregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                folder_agregarMouseClicked(evt);
            }
        });

        guardar_agregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_lenguajes/success.png"))); // NOI18N
        guardar_agregar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                guardar_agregarMouseMoved(evt);
            }
        });
        guardar_agregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guardar_agregarMouseClicked(evt);
            }
        });

        errores.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jd_agregarLayout = new javax.swing.GroupLayout(jd_agregar.getContentPane());
        jd_agregar.getContentPane().setLayout(jd_agregarLayout);
        jd_agregarLayout.setHorizontalGroup(
            jd_agregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_agregarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jd_agregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(folder_agregar)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11))
                .addGap(1, 1, 1)
                .addGroup(jd_agregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tf_correo, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_foto, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jd_agregarLayout.createSequentialGroup()
                        .addComponent(errores, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tf_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(110, 110, 110))
            .addGroup(jd_agregarLayout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addComponent(guardar_agregar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jd_agregarLayout.setVerticalGroup(
            jd_agregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_agregarLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jd_agregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(tf_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jd_agregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jd_agregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(tf_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(errores, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jd_agregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(tf_correo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(jd_agregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb_foto, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(folder_agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(guardar_agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        jd_modificar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jd_modificarMouseMoved(evt);
            }
        });

        jLabel14.setText("Teléfono");

        jLabel17.setText("Correo");

        imagen_modificar.setBackground(new java.awt.Color(0, 0, 0));
        imagen_modificar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        folder_modificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_lenguajes/open-folder.png"))); // NOI18N
        folder_modificar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                folder_modificarMouseMoved(evt);
            }
        });
        folder_modificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                folder_modificarMouseClicked(evt);
            }
        });

        guardar_modificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_lenguajes/success.png"))); // NOI18N
        guardar_modificar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                guardar_modificarMouseMoved(evt);
            }
        });
        guardar_modificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guardar_modificarMouseClicked(evt);
            }
        });

        errores2.setForeground(new java.awt.Color(255, 0, 0));

        jLabel20.setText("Nombre");

        javax.swing.GroupLayout jd_modificarLayout = new javax.swing.GroupLayout(jd_modificar.getContentPane());
        jd_modificar.getContentPane().setLayout(jd_modificarLayout);
        jd_modificarLayout.setHorizontalGroup(
            jd_modificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_modificarLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jd_modificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel20)
                    .addGroup(jd_modificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(folder_modificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(1, 1, 1)
                .addGroup(jd_modificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(correo_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombre_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imagen_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jd_modificarLayout.createSequentialGroup()
                        .addComponent(errores2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(telefono_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(110, 110, 110))
            .addGroup(jd_modificarLayout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(guardar_modificar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jd_modificarLayout.setVerticalGroup(
            jd_modificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_modificarLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jd_modificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(nombre_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jd_modificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jd_modificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(telefono_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(errores2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jd_modificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(correo_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jd_modificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(folder_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imagen_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(guardar_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jd_mensaje.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jd_mensajeMouseMoved(evt);
            }
        });

        jLabel1.setText("Contacto:");

        contenido_mensaje.setColumns(20);
        contenido_mensaje.setRows(5);
        jScrollPane4.setViewportView(contenido_mensaje);

        lb_send.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_lenguajes/send.png"))); // NOI18N
        lb_send.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lb_sendMouseMoved(evt);
            }
        });
        lb_send.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_sendMouseClicked(evt);
            }
        });

        contacto_mensaje.setText("text");

        jLabel23.setText("Numero:");

        telefono_mensaje.setText("text");

        id_mensaje.setText("ID");

        javax.swing.GroupLayout jd_mensajeLayout = new javax.swing.GroupLayout(jd_mensaje.getContentPane());
        jd_mensaje.getContentPane().setLayout(jd_mensajeLayout);
        jd_mensajeLayout.setHorizontalGroup(
            jd_mensajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_mensajeLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jd_mensajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lb_send, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jd_mensajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(id_mensaje)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jd_mensajeLayout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(contacto_mensaje)
                            .addGap(122, 122, 122)
                            .addComponent(jLabel23)
                            .addGap(18, 18, 18)
                            .addComponent(telefono_mensaje))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jd_mensajeLayout.setVerticalGroup(
            jd_mensajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_mensajeLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(id_mensaje)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jd_mensajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(contacto_mensaje)
                    .addComponent(jLabel23)
                    .addComponent(telefono_mensaje))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lb_send, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addGap(28, 28, 28))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabla_llamadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Contacto", "Fecha", "Duracion"
            }
        ));
        jScrollPane2.setViewportView(tabla_llamadas);

        mic_llamada.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_lenguajes/microphone.png"))); // NOI18N
        mic_llamada.setText("MIC");
        mic_llamada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mic_llamadaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(mic_llamada, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(mic_llamada, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Registro de LLamadas", jPanel1);

        tabla_contactos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Telefono", "Correo"
            }
        ));
        tabla_contactos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_contactosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_contactos);

        imagen_principal.setBackground(new java.awt.Color(0, 0, 0));
        imagen_principal.setText("jLabel1");
        imagen_principal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        mic_contacto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_lenguajes/microphone.png"))); // NOI18N
        mic_contacto.setText("MIC");
        mic_contacto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mic_contactoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(imagen_principal, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(mic_contacto, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(imagen_principal, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mic_contacto, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Contactos", jPanel2);

        tabla_mensajes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Contacto", "Contenido", "Fecha", "Hora"
            }
        ));
        jScrollPane3.setViewportView(tabla_mensajes);

        mic_mensaje.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_lenguajes/microphone.png"))); // NOI18N
        mic_mensaje.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mic_mensajeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(mic_mensaje)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(mic_mensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(85, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Mensajes", jPanel3);

        tabla_bitacora.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User", "Fecha", "Accion"
            }
        ));
        jScrollPane5.setViewportView(tabla_bitacora);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(217, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Bitacora", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void refresh() {
        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select* from Contacto ");
            DefaultTableModel m = (DefaultTableModel) tabla_contactos.getModel();
            int size = m.getRowCount();
            for (int i = 0; i < size; i++) {
                m.removeRow(0);
            }
            while (rs.next()) {
                int id = rs.getInt(1);
                String nombre = rs.getString(2);
                String telefono = rs.getString(3);
                String correo = rs.getString(4);
                Object arr[] = {nombre, telefono, correo};
                m.addRow(arr);
            }

            rs = st.executeQuery("select a.Nombre,b.fecha,b.Duracion from dbo.Contacto a inner join dbo.Llamada b on a.ID_contacto=b.ID_contacto");
            DefaultTableModel n = (DefaultTableModel) tabla_llamadas.getModel();
            size = n.getRowCount();
            for (int i = 0; i < size; i++) {
                n.removeRow(0);
            }
            while (rs.next()) {
                String nombre = rs.getString(1);
                Date fecha = rs.getDate(2);
                String duracion = rs.getString(3);
                Object arr[] = {nombre, fecha, duracion};
                n.addRow(arr);
            }
            rs = st.executeQuery("select a.Nombre,b.Contenido,(cast(day(b.Fecha)as nvarchar)+'/'+cast(month(b.Fecha)as nvarchar)+'/'+cast(year(b.Fecha)as nvarchar))as fecha,cast(DATEPART([hour], b.Fecha)as nvarchar)+':'+cast(DATEPART([MINUTE], b.Fecha)as nvarchar) as Hora\n"
                    + "from dbo.Contacto a inner join dbo.Mensaje b on a.ID_contacto=b.ID_contacto");
            DefaultTableModel o = (DefaultTableModel) tabla_mensajes.getModel();
            size = o.getRowCount();
            for (int i = 0; i < size; i++) {
                o.removeRow(0);
            }
            while (rs.next()) {
                String nombre = rs.getString(1);
                String contenido = rs.getString(2);
                String fecha = rs.getString(3);
                String hora = rs.getString(4);
                Object arr[] = {nombre, contenido, fecha, hora};
                o.addRow(arr);
            }
            rs = st.executeQuery("select* from Bitacora");
            DefaultTableModel p = (DefaultTableModel) tabla_bitacora.getModel();
            size = p.getRowCount();
            for (int i = 0; i < size; i++) {
                p.removeRow(0);
            }
            while (rs.next()) {
                String user = rs.getString(1);
                String fecha = rs.getString(2);
                String accion = rs.getString(3);
                Object arr[] = {user,fecha, accion};
                p.addRow(arr);
            }
        } catch (Exception ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    void refresh(String name) {
        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select* from Contacto where Nombre='"+name+"'");
            DefaultTableModel m = (DefaultTableModel) tabla_contactos.getModel();
            int size = m.getRowCount();
            for (int i = 0; i < size; i++) {
                m.removeRow(0);
            }
            while (rs.next()) {
                int id = rs.getInt(1);
                String nombre = rs.getString(2);
                String telefono = rs.getString(3);
                String correo = rs.getString(4);
                Object arr[] = {nombre, telefono, correo};
                m.addRow(arr);
            }

            rs = st.executeQuery("select a.Nombre,b.fecha,b.Duracion from dbo.Contacto a inner join dbo.Llamada b on a.ID_contacto=b.ID_contacto where a.Nombre = '"+name+"'");
            DefaultTableModel n = (DefaultTableModel) tabla_llamadas.getModel();
            size = n.getRowCount();
            for (int i = 0; i < size; i++) {
                n.removeRow(0);
            }
            while (rs.next()) {
                String nombre = rs.getString(1);
                Date fecha = rs.getDate(2);
                String duracion = rs.getString(3);
                Object arr[] = {nombre, fecha, duracion};
                n.addRow(arr);
            }
            rs = st.executeQuery("select a.Nombre,b.Contenido,(cast(day(b.Fecha)as nvarchar)+'/'+cast(month(b.Fecha)as nvarchar)+'/'+cast(year(b.Fecha)as nvarchar))as fecha,cast(DATEPART([hour], b.Fecha)as nvarchar)+':'+cast(DATEPART([MINUTE], b.Fecha)as nvarchar) as Hora\n"
                    + "from dbo.Contacto a inner join dbo.Mensaje b on a.ID_contacto=b.ID_contacto "
                    + "where a.Nombre= '"+name+"'");
            DefaultTableModel o = (DefaultTableModel) tabla_mensajes.getModel();
            size = o.getRowCount();
            for (int i = 0; i < size; i++) {
                o.removeRow(0);
            }
            while (rs.next()) {
                String nombre = rs.getString(1);
                String contenido = rs.getString(2);
                String fecha = rs.getString(3);
                String hora = rs.getString(4);
                Object arr[] = {nombre, contenido, fecha, hora};
                o.addRow(arr);
            }
        } catch (Exception ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    void refrescar_gramatica() {
        File archivo = new File("./SimpleGrammarES2.txt");
        FileWriter fw = null;
        BufferedWriter bw = null;
        ArrayList<String> nombres = new ArrayList();
        try {
            fw = new FileWriter(archivo);
            bw = new BufferedWriter(fw);
            String texto = "#JSGF V1.0;\n"
                    + "grammar sentence;\n"
                    + " \n"
                    + "public <sentence> =\n"
                    + "[<dato0>]\n"
                    + "[<dato1>]\n"
                    + "[<dato2>]\n"
                    + "[<dato3>]\n"
                    + "[<dato4>]\n"
                    + "[<dato5>]\n"
                    + "[<dato6>]\n"
                    + "[<dato7>]\n"
                    + "[<dato8>]\n"
                    + "[<dato9>]\n"
                    + "[<dato10>]\n"
                    + "[<dato11>]\n"
                    + "[<dato12>]\n"
                    + "[<dato13>]\n"
                    + "[<dato14>]\n"
                    + "[<dato15>]";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from dbo.Contacto");
            int length = 15;
            while (rs.next()) {
                length++;
                nombres.add(rs.getString(2));
                texto += "\n[<dato" + length + ">]";
            }
            texto += "\n[<dato1><dato2><dato3><dato4><dato5><dato6><dato7><dato8><dato9><dato10><dato11><dato12><dato13><dato14><dato15>";
            for (int i = 16; i <= length; i++) {
                texto += "<dato" + i + ">";
            }
            texto += "];";
            texto += "<dato0>=Agregar;\n"
                    + "<dato1>=Modificar;\n"
                    + "<dato2>=User;\n"
                    + "<dato3>=Delete;\n"
                    + "<dato4>=Password;\n"
                    + "<dato5>=Call;\n"
                    + "<dato6>=Mensaje;\n"
                    + "<dato7>=Activar;\n"
                    + "<dato8>=Desactivar;\n"
                    + "<dato9>=Camara;\n"
                    + "<dato10>=Salir;\n"
                    + "<dato11>=Brian;\n"
                    + "<dato12>=Disco;\n"
                    + "<dato13>=Contacto;\n"
                    + "<dato14>=Search;\n"
                    + "<dato15>=All;";
            for (int i = 1; i <= nombres.size(); i++) {
                texto += "<dato" + (i + 15) + ">=" + nombres.get(i - 1) + ";";
            }
            bw.write(texto);
            bw.flush();
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            bw.close();
            fw.close();
        } catch (Exception e) {
        }

    }


    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        this.jDialog1.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_jButton6MouseClicked

    private void mic_llamadaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mic_llamadaMouseClicked
        path = "user.png";
        try {
            if (!mic_activado) {
                mic_activado = true;
                recognizer.resume();
                recognizer.allocate();
                Image im = Toolkit.getDefaultToolkit().createImage(getClass().getResource("muted.png"));
                mic_llamada.setIcon(new ImageIcon(im));
                FileReader grammar1 = new FileReader("./SimpleGrammarES2.txt");

                RuleGrammar rg = recognizer.loadJSGF(grammar1);
                rg.setEnabled(true);

                recognizer.addResultListener(a);

                System.out.println("Empieze Dictado");
                recognizer.commitChanges();

                recognizer.requestFocus();

            } else {
                mic_activado = false;
                recognizer.pause();
                Image im = Toolkit.getDefaultToolkit().createImage(getClass().getResource("microphone.png"));
                mic_llamada.setIcon(new ImageIcon(im));
                System.out.println("act: " + a.devolver);
                Statement pt = con.createStatement();
                pt.execute("insert Bitacora values ('Brian',getdate(),'"+a.devolver+"')");
                refresh();
                if (a.devolver.equals("Agregar Contacto ")) {
                    jd_agregar.setModal(true);
                    jd_agregar.pack();
                    jd_agregar.setLocationRelativeTo(this);
                    jd_agregar.setVisible(true);
                }

                if (a.devolver.length() > 6) {
                    if (a.devolver.substring(0, 6).equals("Delete")) {
                        if (a.devolver.length() > 7) {
                            delete_contacto(a.devolver.substring(7, a.devolver.length() - 1));
                        } else {
                            JOptionPane.showMessageDialog(this, "Comando No Válido");
                        }
                    }
                }
                if (a.devolver.length() > 9) {
                    if (a.devolver.substring(0, 9).equals("Modificar")) {
                        if (a.devolver.length() > 10) {
                            try {
                                Statement st = con.createStatement();
                                ResultSet rs = st.executeQuery("select * from Contacto where Nombre = '" + a.devolver.substring(10, a.devolver.length() - 1) + "'");
                                rs.next();
                                nombre_modificar.setText(rs.getString(2));
                                telefono_modificar.setText(rs.getString(3));
                                correo_modificar.setText(rs.getString(4));
                                Image img = Toolkit.getDefaultToolkit().createImage(rs.getString(5)).getScaledInstance(169, 145, 0);
                                if (!rs.getString(5).equals("user.png")) {
                                    this.imagen_modificar.setIcon(new ImageIcon(img));
                                    path = rs.getString(5);
                                }
                                modificar = rs.getString(2);
                                jd_modificar.setModal(true);
                                jd_modificar.pack();
                                jd_modificar.setLocationRelativeTo(this);
                                jd_modificar.setVisible(true);
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(this, "¡ERROR! Comando no válido");
                            }
                        }
                    }
                }
                if (a.devolver.length() > 7) {
                    if (a.devolver.substring(0, 7).equals("Mensaje")) {
                        if (a.devolver.length() > 8) {
                            try {
                                Statement st = con.createStatement();
                                ResultSet rs = st.executeQuery("select * from Contacto where Nombre = '" + a.devolver.substring(8, a.devolver.length() - 1) + "'");
                                rs.next();

                                contacto_mensaje.setText(rs.getString(2));
                                telefono_mensaje.setText(rs.getString(3));
                                id_mensaje.setText(Integer.toString(rs.getInt(1)));
                                jd_mensaje.setModal(true);
                                jd_mensaje.pack();
                                jd_mensaje.setLocationRelativeTo(this);
                                jd_mensaje.setVisible(true);
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(this, "¡ERROR! Comando no válido");
                            }
                        }
                    }
                }
                if (a.devolver.length() > 4) {
                    if (a.devolver.substring(0, 4).equals("Call")) {
                        if (a.devolver.length() > 5) {
                            try {
                                Statement st = con.createStatement();
                                ResultSet rs = st.executeQuery("select * from Contacto where Nombre = '" + a.devolver.substring(5, a.devolver.length() - 1) + "'");
                                rs.next();
                                nombre_llamada.setText(rs.getString(2));
                                Image img = Toolkit.getDefaultToolkit().createImage(rs.getString(5)).getScaledInstance(228, 188, 0);
                                if (!rs.getString(5).equals("user.png")) {
                                    this.imagen_llamada.setIcon(new ImageIcon(img));
                                    path = rs.getString(5);
                                }
                                if (!encender) {
                                    c.start();
                                    encender = true;
                                }
                                a.devolver = "";
                                recognizer.removeResultListener(a);
                                c.setAvanzar(true);
                                jd_llamada.setModal(true);
                                jd_llamada.pack();
                                jd_llamada.setLocationRelativeTo(this);
                                jd_llamada.setVisible(true);

                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(this, "¡ERROR! Comando no válido");
                            }

                        }
                    }
                }
                if (a.devolver.length() > 6) {
                    if (a.devolver.substring(0, 6).equals("Search")) {
                        if (a.devolver.length() > 7) {
                            if (a.devolver.substring(7, a.devolver.length() - 1).equals("All")) {
                                refresh();
                            }else{
                                refresh(a.devolver.substring(7, a.devolver.length() - 1));
                            }
                            
                        } else {
                            JOptionPane.showMessageDialog(this, "Comando No Válido");
                        }
                    }
                }
                if (a.devolver.equals("Salir ")) {
                    recognizer.deallocate();
                    JOptionPane.showMessageDialog(null, "Gracias por utilizar el programa!");
                    System.exit(0);
                }

                a.devolver = "";
                recognizer.removeResultListener(a);

            }
        } catch (Exception e) {
            System.out.println("Exception en " + e.toString());
            e.printStackTrace();
            System.exit(0);
        }
    }//GEN-LAST:event_mic_llamadaMouseClicked

    private void mic_contactoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mic_contactoMouseClicked
        path = "user.png";
        try {
            if (!mic_activado) {
                mic_activado = true;
                recognizer.resume();
                recognizer.allocate();
                Image im = Toolkit.getDefaultToolkit().createImage(getClass().getResource("muted.png"));
                mic_contacto.setIcon(new ImageIcon(im));
                FileReader grammar1 = new FileReader("./SimpleGrammarES2.txt");

                RuleGrammar rg = recognizer.loadJSGF(grammar1);
                rg.setEnabled(true);

                recognizer.addResultListener(a);

                System.out.println("Empieze Dictado");
                recognizer.commitChanges();

                recognizer.requestFocus();

            } else {
                mic_activado = false;
                recognizer.pause();
                Image im = Toolkit.getDefaultToolkit().createImage(getClass().getResource("microphone_med.png"));
                mic_contacto.setIcon(new ImageIcon(im));
                System.out.println("act: " + a.devolver);
                Statement pt = con.createStatement();
                pt.execute("insert Bitacora values ('Brian',getdate(),'"+a.devolver+"')");
                refresh();
                if (a.devolver.equals("Agregar Contacto ")) {
                    jd_agregar.setModal(true);
                    jd_agregar.pack();
                    jd_agregar.setLocationRelativeTo(this);
                    jd_agregar.setVisible(true);
                }

                if (a.devolver.length() > 6) {
                    if (a.devolver.substring(0, 6).equals("Delete")) {
                        if (a.devolver.length() > 7) {
                            delete_contacto(a.devolver.substring(7, a.devolver.length() - 1));
                        } else {
                            JOptionPane.showMessageDialog(this, "Comando No Válido");
                        }
                    }
                }
                if (a.devolver.length() > 9) {
                    if (a.devolver.substring(0, 9).equals("Modificar")) {
                        if (a.devolver.length() > 10) {
                            try {
                                Statement st = con.createStatement();
                                ResultSet rs = st.executeQuery("select * from Contacto where Nombre = '" + a.devolver.substring(10, a.devolver.length() - 1) + "'");
                                rs.next();
                                nombre_modificar.setText(rs.getString(2));
                                telefono_modificar.setText(rs.getString(3));
                                correo_modificar.setText(rs.getString(4));
                                Image img = Toolkit.getDefaultToolkit().createImage(rs.getString(5)).getScaledInstance(169, 145, 0);
                                if (!rs.getString(5).equals("user.png")) {
                                    this.imagen_modificar.setIcon(new ImageIcon(img));
                                    path = rs.getString(5);
                                }
                                modificar = rs.getString(2);
                                jd_modificar.setModal(true);
                                jd_modificar.pack();
                                jd_modificar.setLocationRelativeTo(this);
                                jd_modificar.setVisible(true);
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(this, "¡ERROR! Comando no válido");
                            }
                        }
                    }
                }
                if (a.devolver.length() > 7) {
                    if (a.devolver.substring(0, 7).equals("Mensaje")) {
                        if (a.devolver.length() > 8) {
                            try {
                                Statement st = con.createStatement();
                                ResultSet rs = st.executeQuery("select * from Contacto where Nombre = '" + a.devolver.substring(8, a.devolver.length() - 1) + "'");
                                rs.next();

                                contacto_mensaje.setText(rs.getString(2));
                                telefono_mensaje.setText(rs.getString(3));
                                id_mensaje.setText(Integer.toString(rs.getInt(1)));
                                jd_mensaje.setModal(true);
                                jd_mensaje.pack();
                                jd_mensaje.setLocationRelativeTo(this);
                                jd_mensaje.setVisible(true);
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(this, "¡ERROR! Comando no válido");
                            }
                        }
                    }
                }
                if (a.devolver.length() > 4) {
                    if (a.devolver.substring(0, 4).equals("Call")) {
                        if (a.devolver.length() > 5) {
                            try {
                                Statement st = con.createStatement();
                                ResultSet rs = st.executeQuery("select * from Contacto where Nombre = '" + a.devolver.substring(5, a.devolver.length() - 1) + "'");
                                rs.next();
                                nombre_llamada.setText(rs.getString(2));
                                Image img = Toolkit.getDefaultToolkit().createImage(rs.getString(5)).getScaledInstance(228, 188, 0);
                                if (!rs.getString(5).equals("user.png")) {
                                    this.imagen_llamada.setIcon(new ImageIcon(img));
                                    path = rs.getString(5);
                                }
                                if (!encender) {
                                    c.start();
                                    encender = true;
                                }
                                a.devolver = "";
                                recognizer.removeResultListener(a);
                                c.setAvanzar(true);
                                jd_llamada.setModal(true);
                                jd_llamada.pack();
                                jd_llamada.setLocationRelativeTo(this);
                                jd_llamada.setVisible(true);

                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(this, "¡ERROR! Comando no válido");
                            }

                        }
                    }
                }
                if (a.devolver.length() > 6) {
                    if (a.devolver.substring(0, 6).equals("Search")) {
                        if (a.devolver.length() > 7) {
                            if (a.devolver.substring(7, a.devolver.length() - 1).equals("All")) {
                                refresh();
                            }else{
                                refresh(a.devolver.substring(7, a.devolver.length() - 1));
                            }
                            
                        } else {
                            JOptionPane.showMessageDialog(this, "Comando No Válido");
                        }
                    }
                }
                if (a.devolver.equals("Salir ")) {
                    recognizer.deallocate();
                    JOptionPane.showMessageDialog(null, "Gracias por utilizar el programa!");
                    System.exit(0);
                }
                
                a.devolver = "";
                recognizer.removeResultListener(a);
            }
        } catch (Exception e) {
            System.out.println("Exception en " + e.toString());
            e.printStackTrace();
            System.exit(0);
        }
    }//GEN-LAST:event_mic_contactoMouseClicked

    private void mic_mensajeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mic_mensajeMouseClicked
        path = "user.png";
        try {
            if (!mic_activado) {
                mic_activado = true;
                recognizer.resume();
                recognizer.allocate();
                Image im = Toolkit.getDefaultToolkit().createImage(getClass().getResource("muted.png"));
                mic_mensaje.setIcon(new ImageIcon(im));
                FileReader grammar1 = new FileReader("./SimpleGrammarES2.txt");

                RuleGrammar rg = recognizer.loadJSGF(grammar1);
                rg.setEnabled(true);

                recognizer.addResultListener(a);

                System.out.println("Empieze Dictado");
                recognizer.commitChanges();

                recognizer.requestFocus();

            } else {
                mic_activado = false;
                recognizer.pause();
                Image im = Toolkit.getDefaultToolkit().createImage(getClass().getResource("microphone_med.png"));
                mic_mensaje.setIcon(new ImageIcon(im));
                System.out.println("act: " + a.devolver);
                Statement pt = con.createStatement();
                pt.execute("insert Bitacora values ('Brian',getdate(),'"+a.devolver+"')");
                refresh();
                if (a.devolver.equals("Agregar Contacto ")) {
                    jd_agregar.setModal(true);
                    jd_agregar.pack();
                    jd_agregar.setLocationRelativeTo(this);
                    jd_agregar.setVisible(true);
                }

                if (a.devolver.length() > 6) {
                    if (a.devolver.substring(0, 6).equals("Delete")) {
                        if (a.devolver.length() > 7) {
                            delete_contacto(a.devolver.substring(7, a.devolver.length() - 1));
                        } else {
                            JOptionPane.showMessageDialog(this, "Comando No Válido");
                        }
                    }
                }
                if (a.devolver.length() > 9) {
                    if (a.devolver.substring(0, 9).equals("Modificar")) {
                        if (a.devolver.length() > 10) {
                            try {
                                Statement st = con.createStatement();
                                ResultSet rs = st.executeQuery("select * from Contacto where Nombre = '" + a.devolver.substring(10, a.devolver.length() - 1) + "'");
                                rs.next();
                                nombre_modificar.setText(rs.getString(2));
                                telefono_modificar.setText(rs.getString(3));
                                correo_modificar.setText(rs.getString(4));
                                Image img = Toolkit.getDefaultToolkit().createImage(rs.getString(5)).getScaledInstance(169, 145, 0);
                                if (!rs.getString(5).equals("user.png")) {
                                    this.imagen_modificar.setIcon(new ImageIcon(img));
                                    path = rs.getString(5);
                                }
                                modificar = rs.getString(2);
                                jd_modificar.setModal(true);
                                jd_modificar.pack();
                                jd_modificar.setLocationRelativeTo(this);
                                jd_modificar.setVisible(true);
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(this, "¡ERROR! Comando no válido");
                            }
                        }
                    }
                }
                if (a.devolver.length() > 7) {
                    if (a.devolver.substring(0, 7).equals("Mensaje")) {
                        if (a.devolver.length() > 8) {
                            try {
                                Statement st = con.createStatement();
                                ResultSet rs = st.executeQuery("select * from Contacto where Nombre = '" + a.devolver.substring(8, a.devolver.length() - 1) + "'");
                                rs.next();

                                contacto_mensaje.setText(rs.getString(2));
                                telefono_mensaje.setText(rs.getString(3));
                                id_mensaje.setText(Integer.toString(rs.getInt(1)));
                                jd_mensaje.setModal(true);
                                jd_mensaje.pack();
                                jd_mensaje.setLocationRelativeTo(this);
                                jd_mensaje.setVisible(true);
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(this, "¡ERROR! Comando no válido");
                            }
                        }
                    }
                }
                if (a.devolver.length() > 4) {
                    if (a.devolver.substring(0, 4).equals("Call")) {
                        if (a.devolver.length() > 5) {
                            try {
                                Statement st = con.createStatement();
                                ResultSet rs = st.executeQuery("select * from Contacto where Nombre = '" + a.devolver.substring(5, a.devolver.length() - 1) + "'");
                                rs.next();
                                nombre_llamada.setText(rs.getString(2));
                                Image img = Toolkit.getDefaultToolkit().createImage(rs.getString(5)).getScaledInstance(228, 188, 0);
                                if (!rs.getString(5).equals("user.png")) {
                                    this.imagen_llamada.setIcon(new ImageIcon(img));
                                    path = rs.getString(5);
                                }
                                if (!encender) {
                                    c.start();
                                    encender = true;
                                }
                                a.devolver = "";
                                recognizer.removeResultListener(a);
                                c.setAvanzar(true);
                                jd_llamada.setModal(true);
                                jd_llamada.pack();
                                jd_llamada.setLocationRelativeTo(this);
                                jd_llamada.setVisible(true);

                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(this, "¡ERROR! Comando no válido");
                            }

                        }
                    }
                }
                if (a.devolver.length() > 6) {
                    if (a.devolver.substring(0, 6).equals("Search")) {
                        if (a.devolver.length() > 7) {
                            if (a.devolver.substring(7, a.devolver.length() - 1).equals("All")) {
                                refresh();
                            }else{
                                refresh(a.devolver.substring(7, a.devolver.length() - 1));
                            }
                            
                        } else {
                            JOptionPane.showMessageDialog(this, "Comando No Válido");
                        }
                    }
                }
                if (a.devolver.equals("Salir ")) {
                    recognizer.deallocate();
                    JOptionPane.showMessageDialog(null, "Gracias por utilizar el programa!");
                    System.exit(0);
                }

                a.devolver = "";
                recognizer.removeResultListener(a);

            }
        } catch (Exception e) {
            System.out.println("Exception en " + e.toString());
            e.printStackTrace();
            System.exit(0);
        }
    }//GEN-LAST:event_mic_mensajeMouseClicked

    private void folder_agregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_folder_agregarMouseClicked
        JFileChooser fc = new JFileChooser();
        FileFilter filtro = new FileNameExtensionFilter("Imagenes", "png", "jpg", "gif");
        fc.setFileFilter(filtro);
        File archivo;
        int op = fc.showOpenDialog(this);
        if (op == JFileChooser.APPROVE_OPTION) {
            archivo = fc.getSelectedFile();
            Image img = Toolkit.getDefaultToolkit().createImage(archivo.getPath()).getScaledInstance(169, 145, 0);
            this.lb_foto.setIcon(new ImageIcon(img));
            path = archivo.getPath();
        }
    }//GEN-LAST:event_folder_agregarMouseClicked

    private void guardar_agregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardar_agregarMouseClicked
        try {

            if (!tf_telefono.getText().isEmpty()) {
                errores.setText("");
                Statement st = con.createStatement();
                String nombre = tf_nombre.getText();
                String telefono = tf_telefono.getText();
                String correo = tf_correo.getText();
                if (nombre.isEmpty()) {
                    nombre = "Unknow";
                }
                st.execute("insert Contacto values ('" + nombre + "','" + telefono + "','" + correo + "','" + path + "')");
                JOptionPane.showMessageDialog(jd_agregar, "¡Contacto creado con exito!");
                refresh();
                tf_nombre.setText("");
                tf_telefono.setText("");
                tf_correo.setText("");
                Image img = Toolkit.getDefaultToolkit().createImage(getClass().getResource("user.png")).getScaledInstance(169, 145, 0);
                lb_foto.setIcon(new ImageIcon(img));
                JOptionPane.showMessageDialog(jd_agregar, "¡Contacto Creado!");
                jd_agregar.setVisible(false);
                this.setVisible(true);

            } else {
                JOptionPane.showMessageDialog(jd_agregar, "¡Ingrese un número de teléfono!");
                errores.setText("*");

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        path = "user.png";
        refrescar_gramatica();


    }//GEN-LAST:event_guardar_agregarMouseClicked

    private void folder_modificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_folder_modificarMouseClicked
        JFileChooser fc = new JFileChooser();
        FileFilter filtro = new FileNameExtensionFilter("Imagenes", "png", "jpg", "gif");
        fc.setFileFilter(filtro);
        File archivo;
        int op = fc.showOpenDialog(this);
        if (op == JFileChooser.APPROVE_OPTION) {
            archivo = fc.getSelectedFile();
            Image img = Toolkit.getDefaultToolkit().createImage(archivo.getPath()).getScaledInstance(169, 145, 0);
            this.imagen_modificar.setIcon(new ImageIcon(img));
            path = archivo.getPath();
        }
    }//GEN-LAST:event_folder_modificarMouseClicked

    private void guardar_modificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardar_modificarMouseClicked
        try {
            if (!telefono_modificar.getText().isEmpty()) {
                errores2.setText("");
                Statement st = con.createStatement();
                if (!nombre_modificar.getText().isEmpty()) {
                    st.execute("update Contacto set Nombre = '" + nombre_modificar.getText() + "' where Nombre='" + modificar + "'");
                } else {
                    st.execute("update Contacto set Nombre = 'Unknow' where Nombre='" + modificar + "'");
                }
                st.execute("update Contacto set Telefono = '" + telefono_modificar.getText() + "' where Nombre='" + modificar + "'");
                st.execute("update Contacto set Correo = '" + correo_modificar.getText() + "' where Nombre='" + modificar + "'");
                st.execute("update Contacto set Imagen = '" + path + "' where Nombre='" + modificar + "'");
                path = "user.png";
                refresh();
                JOptionPane.showMessageDialog(jd_modificar, "¡Contacto Modificado!");
                jd_modificar.setVisible(false);
                this.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(jd_agregar, "¡Ingrese un número de teléfono!");
                errores2.setText("*");

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        path = "user.png";
        refrescar_gramatica();
    }//GEN-LAST:event_guardar_modificarMouseClicked

    private void tabla_contactosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_contactosMouseClicked
        if (tabla_contactos.getSelectedRow() >= 0) {
            try {
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("select * from Contacto where Nombre = '" + tabla_contactos.getValueAt(tabla_contactos.getSelectedRow(), 0).toString() + "'");
                rs.next();

                if (!rs.getString(5).equals("user.png")) {
                    Image img = Toolkit.getDefaultToolkit().createImage(rs.getString(5)).getScaledInstance(227, 173, 0);
                    imagen_principal.setIcon(new ImageIcon(img));
                } else {
                    Image img = Toolkit.getDefaultToolkit().createImage(getClass().getResource("user.png")).getScaledInstance(227, 173, 0);
                    imagen_principal.setIcon(new ImageIcon(img));
                }
            } catch (Exception e) {

            }
        } else {
            Image img = Toolkit.getDefaultToolkit().createImage(getClass().getResource("user.png")).getScaledInstance(227, 173, 0);
            imagen_principal.setIcon(new ImageIcon(img));
        }
    }//GEN-LAST:event_tabla_contactosMouseClicked

    private void lb_sendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_sendMouseClicked
        if (!contenido_mensaje.getText().isEmpty()) {
            try {
                Statement st = con.createStatement();
                st.execute("insert Mensaje values (" + Integer.parseInt(id_mensaje.getText()) + ",'" + contenido_mensaje.getText() + "', getdate())");
                refresh();
                JOptionPane.showMessageDialog(jd_mensaje, "¡Mensaje enviado con exito!");
                jd_agregar.setVisible(false);
                contenido_mensaje.setText("");
            } catch (Exception e) {

            }
        } else {
            JOptionPane.showMessageDialog(jd_mensaje, "¡El mensaje esta vacio!");
        }
    }//GEN-LAST:event_lb_sendMouseClicked

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseClicked
        c.setAvanzar(false);
        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select* from Contacto where nombre ='" + nombre_llamada.getText() + "'");
            rs.next();
            System.out.println(tiempo.getText());
            st.execute("insert Llamada values (" + rs.getInt(1) + ",getdate(),'" + tiempo.getText() + "')");
            JOptionPane.showMessageDialog(jd_llamada, "¡Llamada Finalizada!");
            jd_llamada.setVisible(false);
            path = "user.png";
            refresh();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(jd_llamada, "PUPU");
        }
    }//GEN-LAST:event_jLabel22MouseClicked

    private void mic_simMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mic_simMouseClicked
        try {
            if (!mic_activado) {
                mic_activado = true;
                recognizer.resume();
                recognizer.allocate();
                Image img = Toolkit.getDefaultToolkit().createImage(getClass().getResource("muted_med.png"));
                mic_sim.setIcon(new ImageIcon(img));
                FileReader grammar1 = new FileReader("./SimpleGrammarES2.txt");

                RuleGrammar rg = recognizer.loadJSGF(grammar1);
                rg.setEnabled(true);

                recognizer.addResultListener(a);

                System.out.println("Empieze Dictado");
                recognizer.commitChanges();

                recognizer.requestFocus();

            } else {
                mic_activado = false;
                recognizer.pause();
                Image img = Toolkit.getDefaultToolkit().createImage(getClass().getResource("microphone_med.png"));
                mic_sim.setIcon(new ImageIcon(img));
                System.out.println("act: " + a.devolver);
                Statement pt = con.createStatement();
                pt.execute("insert Bitacora values ('Brian',getdate(),'"+a.devolver+"')");
                refresh();
                if (a.devolver.length() > 14) {
                    if (a.devolver.substring(0, 14).equals("Activar Camara")) {
                        //video_llamada();
                        window.setVisible(true);
                        window.toFront();
                        //window.setLocationRelativeTo(jd_llamada);
                    }
                }
                if (a.devolver.length() > 17) {
                    if (a.devolver.substring(0, 17).equals("Desactivar Camara")) {
                        //video_llamada();
                        window.setVisible(false);
                        //window.setLocationRelativeTo(jd_llamada);
                    }
                }
                if (a.devolver.contains("Salir")) {
                    recognizer.deallocate();
                    JOptionPane.showMessageDialog(null, "Gracias por utilizar el programa!");
                    System.exit(0);

                }

                a.devolver = "";
                recognizer.removeResultListener(a);

            }
        } catch (Exception e) {
            System.out.println("Exception en " + e.toString());
            e.printStackTrace();
            System.exit(0);
        }
    }//GEN-LAST:event_mic_simMouseClicked

    private void label_logMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_logMouseClicked
         try {
            if (!mic_activado) {
                mic_activado = true;
                recognizer.resume();
                recognizer.allocate();
                Image img = Toolkit.getDefaultToolkit().createImage(getClass().getResource("muted_med.png"));
                label_log.setIcon(new ImageIcon(img));
                FileReader grammar1 = new FileReader("./SimpleGrammarES2.txt");
                
                RuleGrammar rg = recognizer.loadJSGF(grammar1);
                rg.setEnabled(true);

                recognizer.addResultListener(a);

                System.out.println("Empieze Dictado");
                recognizer.commitChanges();

                recognizer.requestFocus();

            } else {
                mic_activado = false;
                recognizer.pause();
                Image img = Toolkit.getDefaultToolkit().createImage(getClass().getResource("microphone_med.png"));
                label_log.setIcon(new ImageIcon(img));
                
                System.out.println("act: " + a.devolver);
                if (a.devolver.contains("User")) {
                    if (a.devolver.contains("Brian")) {
                        jt_username.setText("Brian");
                    }
                }

                if (a.devolver.contains("Password")) {
                    if (a.devolver.contains("Disco")) {
                        jt_password.setText("Disco");
                    }
                } else {
                    if (a.devolver.contains("Salir")) {
                        recognizer.deallocate();
                        JOptionPane.showMessageDialog(null, "Gracias por utilizar el programa!");
                        System.exit(0);

                    }
                }

                a.devolver = "";
                recognizer.removeResultListener(a);

            }
        } catch (Exception e) {
            System.out.println("Exception en " + e.toString());
            e.printStackTrace();
            System.exit(0);
        }
    }//GEN-LAST:event_label_logMouseClicked

    private void folder_agregarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_folder_agregarMouseMoved
        Image im = Toolkit.getDefaultToolkit().createImage(getClass().getResource("open-folder-with-document.png"));
        folder_agregar.setIcon(new ImageIcon(im));
    }//GEN-LAST:event_folder_agregarMouseMoved

    private void jd_agregarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jd_agregarMouseMoved
        Image im = Toolkit.getDefaultToolkit().createImage(getClass().getResource("open-folder.png"));
        folder_agregar.setIcon(new ImageIcon(im));
        Image im2 = Toolkit.getDefaultToolkit().createImage(getClass().getResource("success.png"));
        guardar_agregar.setIcon(new ImageIcon(im2));    
    }//GEN-LAST:event_jd_agregarMouseMoved

    private void lb_sendMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_sendMouseMoved
        Image im = Toolkit.getDefaultToolkit().createImage(getClass().getResource("send_2.png"));
        lb_send.setIcon(new ImageIcon(im));
    }//GEN-LAST:event_lb_sendMouseMoved

    private void jd_mensajeMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jd_mensajeMouseMoved
        Image im = Toolkit.getDefaultToolkit().createImage(getClass().getResource("send.png"));
        lb_send.setIcon(new ImageIcon(im));
    }//GEN-LAST:event_jd_mensajeMouseMoved

    private void folder_modificarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_folder_modificarMouseMoved
        Image im = Toolkit.getDefaultToolkit().createImage(getClass().getResource("open-folder-with-document.png"));
        folder_modificar.setIcon(new ImageIcon(im));
    }//GEN-LAST:event_folder_modificarMouseMoved

    private void jd_modificarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jd_modificarMouseMoved
        Image im = Toolkit.getDefaultToolkit().createImage(getClass().getResource("open-folder.png"));
        folder_modificar.setIcon(new ImageIcon(im));
        Image im2 = Toolkit.getDefaultToolkit().createImage(getClass().getResource("success.png"));
        guardar_modificar.setIcon(new ImageIcon(im2));
    }//GEN-LAST:event_jd_modificarMouseMoved

    private void guardar_modificarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardar_modificarMouseMoved
        Image im = Toolkit.getDefaultToolkit().createImage(getClass().getResource("success_2.png"));
        guardar_modificar.setIcon(new ImageIcon(im));
    }//GEN-LAST:event_guardar_modificarMouseMoved

    private void guardar_agregarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardar_agregarMouseMoved
        Image im = Toolkit.getDefaultToolkit().createImage(getClass().getResource("success_2.png"));
        guardar_agregar.setIcon(new ImageIcon(im));
    }//GEN-LAST:event_guardar_agregarMouseMoved
    void delete_contacto(String nombre) {
        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from Contacto where Nombre = '" + nombre + "'");
            rs.next();
            rs.getString(2);
            st.execute("delete Contacto from Contacto where Nombre = '" + nombre + "'");
            refresh();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "¡ERROR! Comando no válido");
        }
    }

    public void video_llamada() {
        /*Webcam webcam = Webcam.getDefault();
        webcam.setViewSize(WebcamResolution.VGA.getSize());
        WebcamPanel panel = new WebcamPanel(webcam);
        panel.setFPSDisplayed(true);
        JFrame window = new JFrame("VIDEO CALL");
        window.setTitle("Videollamada");
        window.setSize(imagen_llamada.getSize());
        panel.setFillArea(true);
        window.add(panel);
        window.pack();
        window.setBounds(150, 150, 228, 188);
        window.setVisible(true);
        */
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principal().setVisible(false);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel contacto_mensaje;
    private javax.swing.JTextArea contenido_mensaje;
    private javax.swing.JTextField correo_modificar;
    private javax.swing.JLabel errores;
    private javax.swing.JLabel errores2;
    private javax.swing.JLabel folder_agregar;
    private javax.swing.JLabel folder_modificar;
    private javax.swing.JLabel guardar_agregar;
    private javax.swing.JLabel guardar_modificar;
    private javax.swing.JLabel id_mensaje;
    private javax.swing.JLabel imagen_llamada;
    private javax.swing.JLabel imagen_modificar;
    private javax.swing.JLabel imagen_principal;
    private javax.swing.JButton jButton6;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JDialog jd_agregar;
    private javax.swing.JDialog jd_llamada;
    private javax.swing.JDialog jd_mensaje;
    private javax.swing.JDialog jd_modificar;
    private javax.swing.JPasswordField jt_password;
    private javax.swing.JTextField jt_username;
    private javax.swing.JLabel label_log;
    private javax.swing.JLabel lb_foto;
    private javax.swing.JLabel lb_send;
    private javax.swing.JLabel mic_contacto;
    private javax.swing.JLabel mic_llamada;
    private javax.swing.JLabel mic_mensaje;
    private javax.swing.JLabel mic_sim;
    private javax.swing.JLabel nombre_llamada;
    private javax.swing.JTextField nombre_modificar;
    private javax.swing.JTable tabla_bitacora;
    private javax.swing.JTable tabla_contactos;
    private javax.swing.JTable tabla_llamadas;
    private javax.swing.JTable tabla_mensajes;
    private javax.swing.JLabel telefono_mensaje;
    private javax.swing.JTextField telefono_modificar;
    private javax.swing.JTextField tf_correo;
    private javax.swing.JTextField tf_nombre;
    private javax.swing.JTextField tf_telefono;
    private javax.swing.JLabel tiempo;
    // End of variables declaration//GEN-END:variables

}
